Problem Description

Given an integer array A, sort the array using QuickSort.



Problem Constraints

1 <= |A| <= 105

1 <= A[i] <= 109



Input Format

First argument is an integer array A.



Output Format

Return the sorted array.



Example Input

Input 1:

 A = [1, 4, 10, 2, 1, 5]
Input 2:

 A = [3, 7, 1]


Example Output

Output 1:

 [1, 1, 2, 4, 5, 10]
Output 2:

 [1, 3, 7]


Example Explanation

Explanation 1:

 Return the sorted array.

Solution

public class Solution {
    public int[] solve(int[] A) {
        int N = A.length ;
        quickSort(A , 0 , N -1) ;
        return A ;
    }
     public void quickSort(int[]A , int lo , int hi){
         if (lo>=hi){
             return ;
         } 
         int pivot = A[hi] ;
         int pi = partition(A,lo,hi,pivot) ;
         quickSort(A,lo , pi-1) ;
         quickSort(A,pi+1 , hi) ;
     }
     static int partition(int[] A , int lo , int hi , int pivot){
         int j = lo ;
         int i = lo ;
         while (j<hi){
             if (A[j]>=pivot){
                 j++ ;
             } else {
                 int temp = A[i] ;
                 A[i] = A[j] ;
                 A[j] = temp ;
                 i++ ;
                 j++ ;
             }
         }
         int temp = A[i] ;
         A[i] = A[hi] ;
         A[hi] = temp ;
         return i ;
     }
}
