Problem Description
Given a vector A of non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.



Problem Constraints
1 <= |A| <= 100000



Input Format
First and only argument is the vector A



Output Format
Return one integer, the answer to the question



Example Input
Input 1:

A = [0, 1, 0, 2]
Input 2:

A = [1, 2]


Example Output
Output 1:

1
Output 2:

0


Example Explanation
Explanation 1:

1 unit is trapped on top of the 3rd element.
Explanation 2:

No water is trapped.

public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int trap(final int[] A) {
        int N =A.length ;
        int[] pfmax = new int[N] ;
        int[] sfmax = new int[N] ;
          pfmax[0] = A[0] ;
          for (int i=1 ; i<N ; i++){
              pfmax[i] = Math.max( pfmax[i-1] , A[i] ) ;
          }
          sfmax[N-1] = A[N-1] ;
          for(int i=N-2 ; i>=0 ; i--){
              sfmax[i] = Math.max( sfmax[i+1] , A[i] ) ;
          }
          int ans = 0 ;
         for (int i=1 ; i<N-1 ; i++){
             int lb = pfmax[i-1] ;
             int rb = sfmax[i+1] ;
             int amt = Math.min(lb,rb) - A[i] ;
             if(amt>0){
                 ans+=amt ;
             }
         } 
         return ans ;
    }
}
