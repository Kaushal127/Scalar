Problem Description
Given an array of integers A.

A represents a histogram i.e A[i] denotes the height of the ith histogram's bar. Width of each bar is 1.

Find the area of the largest rectangle formed by the histogram.



Problem Constraints
1 <= |A| <= 100000

1 <= A[i] <= 10000



Input Format
The only argument given is the integer array A.



Output Format
Return the area of the largest rectangle in the histogram.



Example Input
Input 1:

 A = [2, 1, 5, 6, 2, 3]
Input 2:

 A = [2]


Example Output
Output 1:

 10
Output 2:

 2


Example Explanation
Explanation 1:

The largest rectangle has area = 10 unit. Formed by A[3] to A[4].
Explanation 2:

Largest rectangle has area 2.



public class Solution {
    public int largestRectangleArea(int[] A) {
        int[] nsol = nextSmallestLeft(A) ;
        int[] nsor = nextSmallestRight(A) ;
        int N = A.length ;
          int ans = 0 ;
          for (int i=0 ; i<N ; i++){
              int h = A[i] ;
              int w = nsor[i]-nsol[i]-1 ;
              int ar = h*w ;
              if (ar>ans) {
                  ans = ar ;
              }
          }
        return ans ;
    }
     public int[] nextSmallestRight(int[] A) {
         int N = A.length ;
        int[] ans =  new int [N] ;
        ans[N-1] = N ;
        Stack<Integer> st = new Stack<>() ;
        st.push(N-1) ;
          for (int i=N-2 ;i>=0 ;i--) {
              while (st.size()>0 && A[st.peek()]>= A[i]) {
                  st.pop() ;
              }
              if (st.size()==0){
                  ans[i] = N ;
              } else {
                  ans[i] = st.peek();
              }
              st.push(i) ;
          }
           return ans ;
    }
     public int[] nextSmallestLeft(int[] A) {
        int N = A.length ;
        int[] ans =  new int [N] ;
        ans[0] = -1 ;
        Stack<Integer> st = new Stack<>() ;
        st.push(0) ;
          for (int i=0 ;i<N ;i++) {
              while (st.size()>0 && A[st.peek()]>=A[i]) {
                  st.pop() ;
              }
              if (st.size()==0){
                  ans[i] = -1 ;
              } else {
                  ans[i] = st.peek();
              }
              st.push(i) ;
          }
           return ans ;
    }
}
