Problem Description
Given a sorted array of integers A of size N and an integer B, 
where array A is rotated at some pivot unknown beforehand.

For example, the array [0, 1, 2, 4, 5, 6, 7] might become [4, 5, 6, 7, 0, 1, 2].

Your task is to search for the target value B in the array. If found, return its index; otherwise, return -1.

You can assume that no duplicates exist in the array.

NOTE: You are expected to solve this problem with a time complexity of O(log(N)).


Problem Constraints
1 <= N <= 1000000
1 <= A[i] <= 109
All elements in A are Distinct.


Input Format
The First argument given is the integer array A.
The Second argument given is the integer B.


Output Format
Return index of B in array A, otherwise return -1


Example Input
Input 1:

A = [4, 5, 6, 7, 0, 1, 2, 3]
B = 4 
Input 2:

A : [ 9, 10, 3, 5, 6, 8 ]
B : 5


Example Output
Output 1:

 0 
Output 2:

 3


Example Explanation
Explanation 1:

Target 4 is found at index 0 in A. 
Explanation 2:

Target 5 is found at index 3 in A.

public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int search(final int[] A, int B) {
           int n = A.length;
        int minIndex = findMinimumIndex(A);

        // If B is the minimum element, return its index
        if (A[minIndex] == B) {
            return minIndex;
        }

        int left = 0;
        int right = n - 1;

        // Determine which part of the array to search in
        if (B >= A[minIndex] && B <= A[right]) {
            left = minIndex;
        } else {
            right = minIndex - 1;
        }

        // Binary search in the selected part
        while (left <= right) {
            int mid = left + (right - left) / 2;

            // If the middle element is the target, return its index
            if (A[mid] == B) {
                return mid;
            } else if (A[mid] < B) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }

        // If the target is not found, return -1
        return -1;
    }
      public static int findMinimumIndex(int[] A) {
        int n = A.length;
        int lo = 0;
        int hi = n - 1;
        while (lo <hi) {
            int mid =  (lo + hi) / 2;
             if (A[mid] > A[hi]) {
                lo = mid + 1;
            } else {
                hi = mid;
            }
        }
        return lo;
    }
}
