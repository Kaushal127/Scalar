Problem Description
Given an array A of N integers, are there elements a, b, c in S such that a + b + c = 0

Find all unique triplets in the array which gives the sum of zero.

Note:

Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c) The solution set must not contain duplicate triplets.



Problem Constraints
0 <= N <= 7000

-108 <= A[i] <= 108



Input Format
Single argument representing a 1-D array A.



Output Format
Output a 2-D vector where each row represent a unique triplet.



Example Input
Input 1:
A = [-5, 2, 1, 3]
Input 2:
A = [-1, 0, 1, 2, -1, 4]


Example Output
Output 1:
[[-5, 2, 3]]
Output 2:
[[-1,0,1],
 [-1,-1,2] ]


Example Explanation
Explanation 1:
Out of all the possible triplets having total sum zero,only the above triplet is unique.
Explanation 2:
Out of all the possible triplets having total sum zero,only the above two triplets are unique.

public class Solution {
    public ArrayList<ArrayList<Integer>> threeSum(ArrayList<Integer> A) {
        ArrayList<ArrayList<Integer>> List=new ArrayList<>();  
             Collections.sort(A);
               
                for(int i=0;i<A.size()-2;i++){
                    int s = i+1;
                    int e = A.size()-1;
                   
                    while(s < e){
                        ArrayList<Integer> a=new ArrayList<Integer>();
                        if(A.get(i) + A.get(s) + A.get(e)== 0){
                            a.add(A.get(i));
                            a.add(A.get(s));
                            a.add(A.get(e));
                            if(!List.contains(a))
                            {
                            List.add(a);
                            }
                            s++;
                            e--;
                        }
                        if(A.get(i) + A.get(s) + A.get(e) > 0)
                            {
                                e--;
                            }
                        if(A.get(i) + A.get(s) + A.get(e) < 0)
                        {
                            s++;
                        }
                    }
                   
                }
            return List;
    }
}
